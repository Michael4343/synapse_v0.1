-- Create user_lists table to store user's custom lists
CREATE TABLE IF NOT EXISTS public.user_lists (
  id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  user_id UUID NOT NULL REFERENCES public.profiles(id) ON DELETE CASCADE,
  name TEXT NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,

  -- Ensure users can't create duplicate list names
  UNIQUE(user_id, name)
);

-- Create list_items table to store papers saved to lists
CREATE TABLE IF NOT EXISTS public.list_items (
  id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  list_id BIGINT NOT NULL REFERENCES public.user_lists(id) ON DELETE CASCADE,
  paper_data JSONB NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);

-- Enable Row Level Security (RLS) for both tables
ALTER TABLE public.user_lists ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.list_items ENABLE ROW LEVEL SECURITY;

-- Create RLS policies for user_lists table
CREATE POLICY "Users can view their own lists"
ON public.user_lists FOR SELECT
USING (auth.uid() = user_id);

CREATE POLICY "Users can create their own lists"
ON public.user_lists FOR INSERT
WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Users can update their own lists"
ON public.user_lists FOR UPDATE
USING (auth.uid() = user_id);

CREATE POLICY "Users can delete their own lists"
ON public.user_lists FOR DELETE
USING (auth.uid() = user_id);

-- Create RLS policies for list_items table
CREATE POLICY "Users can view items in their own lists"
ON public.list_items FOR SELECT
USING (auth.uid() = (SELECT user_id FROM public.user_lists WHERE id = list_id));

CREATE POLICY "Users can add items to their own lists"
ON public.list_items FOR INSERT
WITH CHECK (auth.uid() = (SELECT user_id FROM public.user_lists WHERE id = list_id));

CREATE POLICY "Users can delete items from their own lists"
ON public.list_items FOR DELETE
USING (auth.uid() = (SELECT user_id FROM public.user_lists WHERE id = list_id));

-- Create indexes for better performance
CREATE INDEX idx_user_lists_user_id ON public.user_lists(user_id);
CREATE INDEX idx_user_lists_created_at ON public.user_lists(created_at DESC);
CREATE INDEX idx_list_items_list_id ON public.list_items(list_id);
CREATE INDEX idx_list_items_created_at ON public.list_items(created_at DESC);
-- Create feed_sessions table to store historical feeds
CREATE TABLE IF NOT EXISTS public.feed_sessions (
  id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  user_id UUID NOT NULL REFERENCES public.profiles(id) ON DELETE CASCADE,
  title TEXT NOT NULL,
  search_type TEXT NOT NULL DEFAULT 'refresh', -- 'refresh', 'keyword_search'
  preferences JSONB,
  created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);
-- Add session_id to feed_items table to link items to sessions
ALTER TABLE public.feed_items
ADD COLUMN session_id BIGINT REFERENCES public.feed_sessions(id) ON DELETE CASCADE;
-- Enable Row Level Security (RLS) for feed_sessions
ALTER TABLE public.feed_sessions ENABLE ROW LEVEL SECURITY;
-- Create RLS policies for feed_sessions table
CREATE POLICY "Users can view their own feed sessions"
ON public.feed_sessions FOR SELECT
USING (auth.uid() = user_id);
CREATE POLICY "Users can create their own feed sessions"
ON public.feed_sessions FOR INSERT
WITH CHECK (auth.uid() = user_id);
CREATE POLICY "Users can update their own feed sessions"
ON public.feed_sessions FOR UPDATE
USING (auth.uid() = user_id);
CREATE POLICY "Users can delete their own feed sessions"
ON public.feed_sessions FOR DELETE
USING (auth.uid() = user_id);
-- Create indexes for better performance
CREATE INDEX idx_feed_sessions_user_id ON public.feed_sessions(user_id);
CREATE INDEX idx_feed_sessions_created_at ON public.feed_sessions(created_at DESC);
CREATE INDEX idx_feed_items_session_id ON public.feed_items(session_id);
-- Create function to auto-delete old sessions (keep only last 20 per user)
CREATE OR REPLACE FUNCTION cleanup_old_feed_sessions()
RETURNS TRIGGER AS $$
BEGIN
    -- Delete sessions beyond the 20 most recent for this user
    DELETE FROM public.feed_sessions
    WHERE user_id = NEW.user_id
    AND id NOT IN (
        SELECT id FROM public.feed_sessions
        WHERE user_id = NEW.user_id
        ORDER BY created_at DESC
        LIMIT 20
    );

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
-- Create trigger to automatically cleanup old sessions
CREATE TRIGGER trigger_cleanup_old_feed_sessions
    AFTER INSERT ON public.feed_sessions
    FOR EACH ROW
    EXECUTE FUNCTION cleanup_old_feed_sessions();
